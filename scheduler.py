from apscheduler.schedulers.background import BackgroundScheduler
from datetime import datetime
from services.db import connect
from telegram import Bot
import asyncio

bot = None  # –ú–∏ –ø—ñ–¥–≤'—è–∂–µ–º–æ –æ–±'—î–∫—Ç –±–æ—Ç–∞ —É main.py

def get_all_chats():
    with connect() as conn:
        cur = conn.cursor()
        cur.execute("SELECT chat_id FROM settings")
        return [row[0] for row in cur.fetchall()]

def get_winner(chat_id):
    with connect() as conn:
        cur = conn.cursor()
        cur.execute("""
            SELECT user_id, username, COUNT(*) as total
            FROM actions
            WHERE chat_id = ?
            GROUP BY user_id, username
            ORDER BY total DESC
            LIMIT 1
        """, (chat_id,))
        return cur.fetchone()

async def send_yearly_report():
    today = datetime.now()
    if today.month == 12 and today.day == 31:
        print("üéâ –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Ä—ñ—á–Ω—ñ –∑–≤—ñ—Ç–∏...")
        for chat_id in get_all_chats():
            winner = get_winner(chat_id)
            if winner:
                user_id, username, total = winner
                text = f"üéâ –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å —Ä–æ–∫—É –ø–æ –¥—Ä–æ—á–∏–ª—å–Ω—ñ —ñ —Å—Ä–∞–Ω–Ω—é –≤ —Ü—å–æ–º—É —á–∞—Ç—ñ: @{username or '–Ω–µ–≤—ñ–¥–æ–º–∏–π'}!\n–ó–∞–≥–∞–ª–æ–º –¥—ñ–π: {total}\n–í—ñ—Ç–∞—î–º–æ! ü•≥"
            else:
                text = "ü§∑ –ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Ü—å–æ–≥–æ —Ä–æ–∫—É. –•—Ç–æ –∂ –±—É–¥–µ –ø–µ—Ä—à–∏–º —É –Ω–æ–≤–æ–º—É?"

            try:
                await bot.send_message(chat_id, tr(chat_id, "winner", username=username, count=total))
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ {chat_id}: {e}")

def start_scheduler(app_bot):
    global bot
    bot = app_bot

    scheduler = BackgroundScheduler()
    scheduler.add_job(lambda: asyncio.create_task(send_yearly_report()), 'cron', hour=20)
    scheduler.start()
